{"ast":null,"code":"import _classCallCheck from\"/home/runner/work/watchparty/watchparty/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/runner/work/watchparty/watchparty/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/runner/work/watchparty/watchparty/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/runner/work/watchparty/watchparty/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import{BaseClient}from'./base';//import { Member } from './types';\nimport{EVENT}from'./events';export var NekoClient=/*#__PURE__*/function(_BaseClient,_EVENT$CONNECTING,_EVENT$CONNECTED,_EVENT$DISCONNECTED,_EVENT$TRACK,_EVENT$DATA,_EVENT$SYSTEM$DISCONN,_EVENT$CONTROL$LOCKED,_EVENT$CONTROL$RELEAS,_EVENT$CONTROL$GIVE,_EVENT$CONTROL$CLIPBO,_EVENT$SCREEN$CONFIGU,_EVENT$SCREEN$RESOLUT){_inherits(NekoClient,_BaseClient);var _super=_createSuper(NekoClient);function NekoClient(){_classCallCheck(this,NekoClient);return _super.apply(this,arguments);}_createClass(NekoClient,[{key:\"login\",value:function login(url,password,displayname){this.connect(url,password,displayname);}},{key:\"logout\",value:function logout(){this.disconnect();}/////////////////////////////\n// Internal Events\n/////////////////////////////\n},{key:_EVENT$CONNECTING,value:function value(){}},{key:_EVENT$CONNECTED,value:function value(){this.emit(EVENT.CONNECTED);}},{key:_EVENT$DISCONNECTED,value:function value(reason){console.warn(reason);this.emit(EVENT.DISCONNECTED);}},{key:_EVENT$TRACK,value:function value(event){var track=event.track,streams=event.streams;this.emit(EVENT.TRACK,track,streams[0]);}},{key:_EVENT$DATA,value:function value(data){console.log('[DATA]',data);}/////////////////////////////\n// System Events\n/////////////////////////////\n},{key:_EVENT$SYSTEM$DISCONN,value:function value(_ref){var message=_ref.message;this.onDisconnected(new Error(message));}/////////////////////////////\n// Control Events\n/////////////////////////////\n},{key:_EVENT$CONTROL$LOCKED,value:function value(_ref2){//this.$accessor.remote.setHost(id);\n// const member = this.member(id);\n// if (!member) {\n//   return;\n// }\nvar id=_ref2.id;}},{key:_EVENT$CONTROL$RELEAS,value:function value(_ref3){//this.$accessor.remote.reset();\n// const member = this.member(id);\n// if (!member) {\n//   return;\n// }\nvar id=_ref3.id;}},{key:_EVENT$CONTROL$GIVE,value:function value(_ref4){// const member = this.member(target);\n// if (!member) {\n//   return;\n// }\n//this.$accessor.remote.setHost(member);\nvar id=_ref4.id,target=_ref4.target;}},{key:_EVENT$CONTROL$CLIPBO,value:function value(_ref5){var text=_ref5.text;this.emit(EVENT.CONTROL.CLIPBOARD,text);}/////////////////////////////\n// Screen Events\n/////////////////////////////\n},{key:_EVENT$SCREEN$CONFIGU,value:function value(_ref6){// console.log('[CONFIGURATIONS]', configurations);\n//this.$accessor.video.setConfigurations(configurations);\nvar configurations=_ref6.configurations;}},{key:_EVENT$SCREEN$RESOLUT,value:function value(_ref7){var id=_ref7.id,width=_ref7.width,height=_ref7.height,rate=_ref7.rate;this.emit(EVENT.SCREEN.RESOLUTION,{width:width,height:height,rate:rate});}}]);return NekoClient;}(BaseClient,EVENT.CONNECTING,EVENT.CONNECTED,EVENT.DISCONNECTED,EVENT.TRACK,EVENT.DATA,EVENT.SYSTEM.DISCONNECT,EVENT.CONTROL.LOCKED,EVENT.CONTROL.RELEASE,EVENT.CONTROL.GIVE,EVENT.CONTROL.CLIPBOARD,EVENT.SCREEN.CONFIGURATIONS,EVENT.SCREEN.RESOLUTION);export{default as VBrowser}from'./VBrowser';","map":{"version":3,"sources":["/home/runner/work/watchparty/watchparty/src/components/VBrowser/index.ts"],"names":["BaseClient","EVENT","NekoClient","url","password","displayname","connect","disconnect","emit","CONNECTED","reason","console","warn","DISCONNECTED","event","track","streams","TRACK","data","log","message","onDisconnected","Error","id","target","text","CONTROL","CLIPBOARD","configurations","width","height","rate","SCREEN","RESOLUTION","CONNECTING","DATA","SYSTEM","DISCONNECT","LOCKED","RELEASE","GIVE","CONFIGURATIONS","default","VBrowser"],"mappings":"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","sourcesContent":["import EventEmitter from 'eventemitter3';\n\nimport { BaseClient } from './base';\n//import { Member } from './types';\nimport { EVENT } from './events';\nimport {\n  ControlClipboardPayload,\n  ControlPayload,\n  ControlTargetPayload,\n  DisconnectPayload,\n  ScreenConfigurationsPayload,\n  ScreenResolutionPayload,\n} from './messages';\n\nexport class NekoClient extends BaseClient implements EventEmitter<any> {\n  login(url: string, password: string, displayname: string) {\n    this.connect(url, password, displayname);\n  }\n\n  logout() {\n    this.disconnect();\n  }\n\n  /////////////////////////////\n  // Internal Events\n  /////////////////////////////\n  protected [EVENT.CONNECTING]() {}\n\n  protected [EVENT.CONNECTED]() {\n    this.emit(EVENT.CONNECTED);\n  }\n\n  protected [EVENT.DISCONNECTED](reason?: Error) {\n    console.warn(reason);\n    this.emit(EVENT.DISCONNECTED);\n  }\n\n  protected [EVENT.TRACK](event: RTCTrackEvent) {\n    const { track, streams } = event;\n    this.emit(EVENT.TRACK, track, streams[0]);\n  }\n\n  protected [EVENT.DATA](data: any) {\n    console.log('[DATA]', data);\n  }\n\n  /////////////////////////////\n  // System Events\n  /////////////////////////////\n  protected [EVENT.SYSTEM.DISCONNECT]({ message }: DisconnectPayload) {\n    this.onDisconnected(new Error(message));\n  }\n\n  /////////////////////////////\n  // Control Events\n  /////////////////////////////\n  protected [EVENT.CONTROL.LOCKED]({ id }: ControlPayload) {\n    //this.$accessor.remote.setHost(id);\n    // const member = this.member(id);\n    // if (!member) {\n    //   return;\n    // }\n  }\n\n  protected [EVENT.CONTROL.RELEASE]({ id }: ControlPayload) {\n    //this.$accessor.remote.reset();\n    // const member = this.member(id);\n    // if (!member) {\n    //   return;\n    // }\n  }\n\n  protected [EVENT.CONTROL.GIVE]({ id, target }: ControlTargetPayload) {\n    // const member = this.member(target);\n    // if (!member) {\n    //   return;\n    // }\n    //this.$accessor.remote.setHost(member);\n  }\n\n  protected [EVENT.CONTROL.CLIPBOARD]({ text }: ControlClipboardPayload) {\n    this.emit(EVENT.CONTROL.CLIPBOARD, text);\n  }\n\n  /////////////////////////////\n  // Screen Events\n  /////////////////////////////\n  protected [EVENT.SCREEN.CONFIGURATIONS]({\n    configurations,\n  }: ScreenConfigurationsPayload) {\n    // console.log('[CONFIGURATIONS]', configurations);\n    //this.$accessor.video.setConfigurations(configurations);\n  }\n\n  protected [EVENT.SCREEN.RESOLUTION]({\n    id,\n    width,\n    height,\n    rate,\n  }: ScreenResolutionPayload) {\n    this.emit(EVENT.SCREEN.RESOLUTION, { width, height, rate });\n  }\n}\n\nexport { default as VBrowser } from './VBrowser';\n"]},"metadata":{},"sourceType":"module"}